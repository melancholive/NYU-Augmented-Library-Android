{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScreenTemplate from \"../screenTemplate\";\nimport styles from \"./SearchStyle\";\nvar apiUrl = {\n  books: 'https://dummy-api.com/books',\n  articles: 'https://dummy-api.com/articles',\n  courseReserves: 'https://dummy-api.com/courseReserves'\n};\nvar handleSearch = function handleSearch() {\n  if (!(selectedCategory in apiUrl)) {\n    console.error('Invalid category selected');\n    return;\n  }\n  fetch(apiUrl[selectedCategory] + (\"?q=\" + query)).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(\"Search results for \" + selectedCategory + \":\", data);\n  }).catch(function (error) {\n    console.error(\"Error searching for \" + selectedCategory + \":\", error);\n  });\n};\nexport default function SearchScreen() {\n  var _useState = useState('enter your search query'),\n    _useState2 = _slicedToArray(_useState, 2),\n    query = _useState2[0],\n    setQuery = _useState2[1];\n  var _useState3 = useState('books'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedCategory = _useState4[0],\n    setSelectedCategory = _useState4[1];\n  return React.createElement(ScreenTemplate, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.innerContainer\n  }, React.createElement(View, {\n    style: styles.headingContainer\n  }, React.createElement(Text, {\n    style: styles.heading\n  }, \"Search\")), React.createElement(View, {\n    style: styles.searchContainer\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap'\n    }\n  }, React.createElement(Button, {\n    title: \"Books\",\n    onPress: function onPress() {\n      return setSelectedCategory('books');\n    },\n    color: selectedCategory === 'books' ? 'rgb(92, 92, 92)' : 'rgb(190, 190, 190)'\n  }), React.createElement(Button, {\n    title: \"Articles + Databases\",\n    onPress: function onPress() {\n      return setSelectedCategory('articles');\n    },\n    color: selectedCategory === 'articles' ? 'rgb(92, 92, 92)' : 'rgb(190, 190, 190)'\n  }), React.createElement(Button, {\n    title: \"Course Reserves\",\n    onPress: function onPress() {\n      return setSelectedCategory('courseReserves');\n    },\n    color: selectedCategory === 'courseReserves' ? 'rgb(92, 92, 92)' : 'rgb(190, 190, 190)'\n  })), React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Enter your search query\",\n    value: query,\n    onChangeText: function onChangeText(text) {\n      return setQuery(text);\n    }\n  }), React.createElement(Text, {\n    style: styles.advancedSearch,\n    onPress: function onPress() {\n      return Linking.openURL('http://google.com');\n    }\n  }, \"Advanced Search\"))))));\n}","map":{"version":3,"names":["React","useState","View","ScrollView","Text","Button","TextInput","ScreenTemplate","styles","apiUrl","books","articles","courseReserves","handleSearch","selectedCategory","console","error","fetch","query","then","response","json","data","log","catch","SearchScreen","_useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","setSelectedCategory","createElement","style","container","innerContainer","headingContainer","heading","searchContainer","width","display","flexDirection","flexWrap","title","onPress","color","inputContainer","input","placeholder","value","onChangeText","text","advancedSearch","Linking","openURL"],"sources":["/Users/elsamitchell/NYU-Augmented-Library-Android/Screens/Search/SearchScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, ScrollView, Text, Button, TextInput } from 'react-native';\nimport ScreenTemplate from '../screenTemplate';\nimport styles from './SearchStyle';\n//dummy APIs\nconst apiUrl = {\n  books: 'https://dummy-api.com/books',\n  articles: 'https://dummy-api.com/articles',\n  courseReserves: 'https://dummy-api.com/courseReserves',\n};\n\n//perform the search based on the selected category and the query here\nconst handleSearch = () => {\n  if (!(selectedCategory in apiUrl)) {\n    console.error('Invalid category selected');\n    return;\n  }\n\n  fetch(apiUrl[selectedCategory] + `?q=${query}`)\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(`Search results for ${selectedCategory}:`, data); //?redirect to which page?\n    })\n    .catch((error) => {\n      console.error(`Error searching for ${selectedCategory}:`, error);\n    });\n};\n\nexport default function SearchScreen() {\n  const [query, setQuery] = useState('enter your search query');\n  const [selectedCategory, setSelectedCategory] = useState('books'); // Default category is 'books'\n\n  return (\n    <ScreenTemplate>\n      <View style={styles.container}>\n        <View style={styles.innerContainer}>\n          <View style={styles.headingContainer}>\n            <Text style={styles.heading}>Search</Text>\n          </View>\n          <View style={styles.searchContainer}>\n            <View\n              style={{\n                width: '100%',\n                display: 'flex',\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n              }}\n            >\n              <Button\n                title=\"Books\"\n                onPress={() => setSelectedCategory('books')}\n                color={\n                  selectedCategory === 'books'\n                    ? 'rgb(92, 92, 92)'\n                    : 'rgb(190, 190, 190)'\n                }\n              />\n              <Button\n                title=\"Articles + Databases\"\n                onPress={() => setSelectedCategory('articles')}\n                color={\n                  selectedCategory === 'articles'\n                    ? 'rgb(92, 92, 92)'\n                    : 'rgb(190, 190, 190)'\n                }\n              />\n              <Button\n                title=\"Course Reserves\"\n                onPress={() => setSelectedCategory('courseReserves')}\n                color={\n                  selectedCategory === 'courseReserves'\n                    ? 'rgb(92, 92, 92)'\n                    : 'rgb(190, 190, 190)'\n                }\n              />\n            </View>\n            <View style={styles.inputContainer}>\n              <TextInput\n                style={styles.input}\n                placeholder=\"Enter your search query\"\n                value={query}\n                onChangeText={(text) => setQuery(text)}\n              />\n              <Text\n                style={styles.advancedSearch}\n                onPress={() => Linking.openURL('http://google.com')}\n              >\n                Advanced Search\n              </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    </ScreenTemplate>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}